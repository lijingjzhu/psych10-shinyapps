color = "blue",
args = list(mean = mean(samp_means),
sd = sd(samp_means))) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density")
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm,
color = "blue",
args = list(mean = mean(samp_means),
sd = sd(samp_means))) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density")
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm,
color = "blue",
args = list(mean = mean(samp_means),
sd = sd(samp_means)),
size = 1) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density")
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm,
color = "blue",
args = list(mean = mean(samp_means),
sd = sd(samp_means)),
size = 0.8) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density")
runApp('GitHub/psych10-shinyapps/apps/clt_demo')
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Frequency")
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density")
density(samp_means)
hist(samp_means)
density(df)
density(data)
df %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(mapping = aes(y = ..density..), binwidth = 1) +
theme_bw() +
labs(x = "", y = "Density") +
coord_cartesian(xlim = c(mean(df$val) - 2 , mean(df$val) + 2))
runApp('GitHub/psych10-shinyapps/apps/clt_demo')
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
samp_means
View(samp_means)
density(samp_means)
?density
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..))
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..))
samp_plot <- tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram() +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram() +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
samp_plot <- tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(y = ..density..) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
samp_plot <- tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
samp_plot <- tibble(val = samp_means) %>%
ggplot(mapping = aes(x = val)) +
geom_histogram(aes(y = ..density..)) +
theme_bw() +
labs(x = "Distribution of Sample Means",
y = "Density", title = "Sampling Distribution") +
coord_cartesian(xlim = c(mean(samp_means) - 3*sd(samp_means),
mean(samp_means) + 3*sd(samp_means)))
rnorm(1000)  %>% density()
runApp('GitHub/psych10-shinyapps/apps/clt_demo')
rnorm(1000)  %>% density()
runApp('GitHub/psych10-shinyapps/apps/clt_demo')
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
data %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y))
data <- tibble(x = rnorm(10, mean = 20, sd = 10),
y = rnorm(10, mean = 20, sd = 10))
data %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y))
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
lm(data = data, y ~ x)
summary(fit)
fit <- lm(data = data, y ~ x)
summary(fit)
coef(fit)
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
shiny::runApp('GitHub/psych10-shinyapps/apps/changing_slope')
runApp('Desktop/regression')
library(shiny)
library(tidyverse)
library(psych)
?height
?galston
galston
height
?psych
galton
galton %>%
tibble() %>%
ggplot() +
geom_histogram(mapping = aes(x = parent))
galton %>%
as_tibble()
galton %>%
as_tibble() %>%
ggplot() +
geom_histogram(mapping = aes(x = parent))
galton %>%
as_tibble() %>%
ggplot() +
geom_density(mapping = aes(x = parent))
galton %>%
as_tibble() %>%
ggplot() +
geom_freqpoly(mapping = aes(x = parent))
galton %>%
as_tibble() %>%
ggplot() +
geom_density(mapping = aes(x = parent))
runApp('Desktop/regression')
runApp('Desktop/regression')
density(galton, 67.8)
density(galton$parent, 67.8)
approxfun(density(galton$parent))
density(galton$parent)
x <- log(rgamma(150,5))
df <- approxfun(density(x))
df
percentile(galton$parent)
quantile(galton$parent, 0.1)
runif(min(galton$parent), upper_bound)
upper_bound <- quantile(galton$parent, 0.1)
runif(min(galton$parent), upper_bound)
min(galton$parent)
upper_bound
upper_bound <- quantile(galton$parent, 0.1) %>% as.numeric()
upper_bound
runif(5, min(galton$parent), upper_bound)
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(mapping = aes(x = xnew, y = dheight(xnew)))
dheight(xnew)
dheight <- approxfun(density(galton$parent))
upper_bound <- quantile(galton$parent, 0.1)
xnew <- runif(5, min(galton$parent), upper_bound)
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(mapping = aes(x = xnew, y = dheight(xnew)))
dheight
dheight(xnew)
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(mapping = aes(x = xnew, y = dheight(xnew)))
df %>%
ggplot() +
geom_density(mapping = aes(x = parent))
df
df <- psych::galton %>% as_tibble()
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(mapping = aes(x = xnew, y = dheight(xnew)))
pinpoints <- tibble(xnew = runif(5, min(galton$parent), upper_bound),
ynew = dheight(xnew))
pinpoints
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew))
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew), color = "red")
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5)
pinpoints
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE)
pinpoints
dheight <- approxfun(density(galton$parent))
upper_bound <- quantile(galton$parent, 0.1)
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE) %>%
mutate(xnew = parent,
ynew = dheight(parent))
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew), color = "red")
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE) %>%
mutate(xnew = parent,
ynew = dheight(parent)) %>%
count(xnew, ynew)
pinpoints
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew), size = n,
color = "red")
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE) %>%
mutate(xnew = parent,
ynew = dheight(parent)) %>%
count(xnew, ynew)
pinpoints
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE) %>%
mutate(xnew = parent,
ynew = dheight(parent)) %>%
count(xnew, ynew)
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew), size = n,
color = "red")
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew, size = n),
color = "red")
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew, size = factor(n)),
color = "red")
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew, size = factor(n)),
color = "red") +
theme_bw()
pinpoints
pinpoints
pinpoints <- df %>%
filter(parent < upper_bound) %>%
sample_n(5, replace = FALSE)
pinpoints
pinpoints %>%
mutate(xnew = child, ynew = dheight(child)) %>%
count(xnew, ynew)
dheight <- approxfun(density(galton$child))
pinpoints <- pinpoints %>%
mutate(xnew = child, ynew = dheight(child)) %>%
count(xnew, ynew)
df %>%
ggplot() +
geom_density(mapping = aes(x = child)) +
geom_point(data = pinpoints,
mapping = aes(x = xnew, y = ynew, size = factor(n)),
color = "red") +
theme_bw() +
labs(x = "Height of Parent (in)", y = "Density",
size = "Number of Data Points")
runApp('Desktop/regression')
lower_bound <- quantile(df$parent, 0)
lower_bound
max_bound <- quantile(df$parent, 1)
max_bound
runApp('Desktop/regression')
runApp('Desktop/regression')
quant <- 0.7
upper_bound <- quantile(df$parent, quant)
upper_bound
if (quant > 0.5) {
upper = TRUE
} else {
upper = FALSE
}
upper
if (upper == TRUE)
upper == TRUE
v$data %>%
filter(parent >= upper_bound) %>%
sample_n(min(10, n()), replace = FALSE)
df %>%
filter(parent >= upper_bound) %>%
sample_n(min(10, n()), replace = FALSE)
runApp('Desktop/regression')
quant
upper_bound <- quantile(v$data %>% .$parent, quant)
runApp('Desktop/regression')
data = psych::galton %>% as_tibble()
data
data %>% .$parent
upper_bound <- quantile(data %>% .$parent, quant)
upper_bound
data <- data %>%
filter(parent >= upper_bound) %>%
sample_n(10, replace = FALSE)
data
dheight <- approxfun(density(psych::galton$parent))
pinpoints <- data %>%
mutate(xnew = parent,
ynew = dheight(parent))
pinpoints
df %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_jitter(data = pinpoints,
mapping = aes(x = xnew, y = ynew),
color = "red") +
geom_vline(mapping = aes(xintercept = mean(df$child))) +
geom_vline(mapping = aes(xintercept = mean(pinpoints$xnew)),
color = "red") +
theme_bw() +
labs(x = "Height of Parent (in)", y = "Density",
size = NULL)
dheight <- approxfun(density(galton$child))
pinpoints <- v$data %>%
mutate(xnew = child, ynew = dheight(child)) %>%
count(xnew, ynew)
pinpoints <- data %>%
mutate(xnew = child, ynew = dheight(child)) %>%
count(xnew, ynew)
df %>%
ggplot() +
geom_density(mapping = aes(x = child)) +
geom_jitter(data = pinpoints,
mapping = aes(x = xnew, y = ynew),
color = "red") +
geom_vline(mapping = aes(xintercept = mean(df$child))) +
geom_vline(mapping = aes(xintercept = mean(pinpoints$xnew)),
color = "red") +
theme_bw() +
labs(x = "Height of Child (in)", y = "Density",
size = NULL)
runApp('Desktop/regression')
runApp('Desktop/regression')
df$parent
quant
upper_bound <- quantile(df$parent, quant)
upper_bound
runApp('Desktop/regression')
quant <- 0.1
runApp('Desktop/regression')
quant
upper_bound <- quantile(galton$parent %>% as.numeric(), quant) %>%
as.numeric()
upper_bound
dheight <- approxfun(density(galton$parent))
dheight(parent)
pinpoints <- galton %>%
filter(parent < upper_bound) %>%
sample_n(10, replace = FALSE) %>%
mutate(xnew = parent,
ynew = dheight(parent))
pinpoints
runApp('Desktop/regression')
runApp('Desktop/regression')
upper_bound = 0.1
quantile(galton$parent, 0.1)
galton %>%
as_tibble() %>%
filter(parent < 65.5)
runApp('Desktop/regression')
galton %>%
as_tibble() %>%
ggplot() +
geom_density(mapping = aes(x = parent))
galton %>%
as_tibble() %>%
ggplot() +
geom_density(mapping = aes(x = parent)) +
geom_jitter(data = pinpoints,
mapping = aes(x = xnew, y = ynew),
color = "red", size = 2)
runApp('Desktop/regression')
upper_bound <- 65.5
dheight <- approxfun(density(galton$parent))
runApp('Desktop/regression')
?psych
?galton
runApp('Desktop/regression')
install.packages("learnr")
install.packages("learnr")
?learnr
??learnr
library(learnr)
?learnr
??learnr
shiny::runApp('GitHub/psych10-shinyapps/apps/regression')
runApp('GitHub/psych10-shinyapps/apps/changing_slope')
geyser
faithful
?data
?USArrests
USArrests
?datasets
library(help = "datasets")
anscome
anscomb
anscombe
beavers
beavers
cars
crimtab
iris
quakes
rivers
women
uspop
?uspop
sleep
?sleep
head(sleep)
head(datasets::sleep)
class(sleep)
summary(sleep)
summary(sleep[sleep$group == "2"])
summary(sleep[sleep$group == "2",])
sleep %>%
filter(group == "2") %>%
summary()
sleep %>%
filter(group == "1") %>%
summary()
sleep %>%
filter(group == "2") %>%
summary()
shiny::runApp('GitHub/psych10-shinyapps/apps/pop_stats')
?datasets
cars
runApp('GitHub/psych10-shinyapps/apps/pop_stats')
summary(cars)
runApp('GitHub/psych10-shinyapps/apps/pop_stats')
table(car$speed)
table(cars$speed)
runApp('GitHub/psych10-shinyapps/apps/pop_stats')
dim(cars)
runApp('GitHub/psych10-shinyapps/apps/pop_stats')
