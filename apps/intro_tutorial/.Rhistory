fill = rect_num)) +
labs(fill = "Event Type")
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num)) +
labs(fill = "Event Type") +
theme_bw()
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.4) +
labs(fill = "Event Type") +
theme_bw()
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw()
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continous(breaks = NULL)
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = NULL)
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL)
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(panel.grid.major =
element_line(colour = "white"))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(panel.grid.major =
element_line(colour = "black"))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(panel.grid.major =
element_line(colour = "grey"))
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
?selectInput
runApp('Desktop/cond_prob')
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.u = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(1, 6, 2, 3),
xmax = xmin + rect_length,
ymin = seq(1, 7, by = 2),
ymax = seq(2, 8, by = 2))
df
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length,
ymin = seq(1, 7, by = 2),
ymax = seq(2, 8, by = 2))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continous(breaks = 1:10) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = 1:10) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length,
ymin = seq(1, 7, by = 2),
ymax = seq(2, 8, by = 2)) %>%
filter(rect_num %in% selected)
selected <- c(input$main_prob, input$given_prob)
selectd <- c("A", "C")
selected <- c("A", "C")
selected <- c(input$main_prob, input$given_prob)
rect_length <- c(7, 4, 5, 2)
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length,
ymin = seq(1, 7, by = 2),
ymax = seq(2, 8, by = 2)) %>%
filter(rect_num %in% selected)
df
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length,
ymin = rep(1, 4),
ymax = rep(2, 4)) %>%
filter(rect_num %in% selected)
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
scale_y_continous(breaks = seq(0, 4, by = 1)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
scale_y_continuous(breaks = seq(0, 4, by = 1)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.2) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
rect_length <- c(7, 4, 5, 2)
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length,
ymin = seq(1, 7, by = 2),
ymax = seq(2, 8, by = 2))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length) %>%
filter(rect_num %in% selected) %>%
mutate(ymin = c(1, 2),
ymax = c(2, 3))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.2) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
selected <- ("B", "D")
selected <- c("B", "D")
rect_length <- c(7, 4, 5, 2)
df <- tibble(rect_num = c("A", "B", "C", "D"),
xmin = c(0, 6, 2, 3),
xmax = xmin + rect_length) %>%
filter(rect_num %in% selected) %>%
mutate(ymin = c(1, 2),
ymax = c(2, 3))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
scale_color_manual(values = c("#999999", "#56B4E9"))
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
scale_color_manual(values = c("#999999", "#56B4E9"))
grp_colors <- c("A" = "#8ED752", "B" = "#F95643",
"C" = "#53AFFE", "D" = "#C3D221")
df %>%
ggplot() +
geom_rect(mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax,
fill = rect_num),
alpha = 0.6) +
labs(fill = "Event Type") +
theme_bw() +
scale_x_continuous(breaks = seq(0, 10, by = 2)) +
scale_fill_manual(values = grp_colors, guide = FALSE) +
coord_cartesian(y = c(0, 4)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
runApp('Desktop/cond_prob')
shiny::runGitHub("psych10-shinyapps", "psych10", subdir = "apps/intro_tutorial/")
?run_tutorial
rmarkdown::run("https://raw.githubusercontent.com/lijingjzhu/psych10-shinyapps/master/apps/intro_tutorial/intro_tutorial.Rmd")
?rmarkdown::run
rmarkdown::run("intro_tutorial.Rmd")
setwd("~/GitHub/psych10-shinyapps/apps/intro_tutorial")
rmarkdown::run("intro_tutorial.Rmd")
runApp('~/GitHub/psych10-shinyapps/apps/changing_slope')
runApp('~/GitHub/psych10-shinyapps/apps/regression')
head(sleep)
dim(sleep)
sleep
nrow(sleep)
str(sleep)
class(sleep)
summary(sleep[sleep$group == "1",])
sleep %>%
ggplot() +
geom_boxplot(mapping = aes(x = group, y = extra))
sleep %>%
ggplot() +
geom_boxplot(mapping = aes(x = extra, y = group))
boxplot(sleep$extra)
boxplot(sleep$extra, sleep$group)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra))
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 3)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 2)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 1.5)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 1)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 0.5)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 0.8)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 0.9)
sleep %>%
ggplot() +
geom_histogram(mapping = aes(x = extra), binwidth = 1)
head(sleep)
sleep
str(sleep)
sleep %>%
filter(group == "1") %>%
mutate(ID = as.numeric(ID)) %>%
# We will be using the same x and y arguments for 2 geoms, so it is better to put
# it in the general ggplot() call
ggplot(mapping = aes(x = ID, y = extra)) +
geom_point() +
geom_line()
sleep %>%
group_by(group) %>%
summarise(extra = mean(extra))
sleep %>%
group_by(group) %>%
summarise(extra = abs(extra))
sleep %>%
group_by(group) %>%
summarise(extra = extra %>% abs() %>% sum())
shiny::runGitHub("psych10-shinyapps", "psych10", subdir = "apps/cond_prob/")
shiny::runGitHub("psych10-shinyapps", "psych10", subdir = "apps/conf_int/")
sleep[5,]
sleep[5, 1]
