workplace_file <- "workplace_survey.csv"
# Total people in the panel
N <- 70798
# Total people in the sample
n <- 101
df <- read_csv(workplace_file,
col_names = c("user_id", "ts", "completion",
"pub_cat", "gender", "age", "geography",
"weight", "q1", "q2", "q3", "q4",
"q5", "q6", "q1_time", "q2_time",
"q3_time", "q4_time", "q5_time",
"q6_time"), skip = 1) %>%
mutate(q6 = ifelse(q6 == "Yes", 1, 0) %>% as.integer(),
q2 = ifelse(q2 == "Female", 1, 0) %>% as.integer(),
q3 = ifelse(q3 == "Yes", 1, 0) %>% as.integer())
(srs_mean <- df %>%
summarise(prop_est = mean(q6)) %>%
.$prop_est)
(var_srs <- (1 - n/N)*((srs_mean * (1 - srs_mean))/(n - 1)))
var_srs
View(var_srs)
n
n/N
(1 - n/N)
(var_srs <- ((srs_mean * (1 - srs_mean))/(n - 1)))
srs_mean
srs_mean
(srs_mean * (1 - srs_mean)
)
var_srs
c(srs_mean - 1.96*sqrt(var_srs),
srs_mean + 1.96*sqrt(var_srs))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# Libraries loaded
# Data wrangling
library(tidyverse)
# Survey methods
library(survey)
# Parameters
# Data file
workplace_file <- "workplace_survey.csv"
# Total people in the panel
N <- 70798
# Total people in the sample
n <- 101
df <- read_csv(workplace_file,
col_names = c("user_id", "ts", "completion",
"pub_cat", "gender", "age", "geography",
"weight", "q1", "q2", "q3", "q4",
"q5", "q6", "q1_time", "q2_time",
"q3_time", "q4_time", "q5_time",
"q6_time"), skip = 1) %>%
mutate(q6 = ifelse(q6 == "Yes", 1, 0) %>% as.integer(),
q2 = ifelse(q2 == "Female", 1, 0) %>% as.integer(),
q3 = ifelse(q3 == "Yes", 1, 0) %>% as.integer())
(srs_mean <- df %>%
summarise(prop_est = mean(q6)) %>%
.$prop_est)
(var_srs <- (1 - n/N)*((srs_mean * (1 - srs_mean))/(n - 1)))
c(srs_mean - 1.96*sqrt(var_srs),
srs_mean + 1.96*sqrt(var_srs))
df %>%
group_by(q2) %>%
summarise(prop_est = mean(q6)) %>%
ungroup()
weights <- c(0.229, 0.051, 0.074, 0.108)
weights <- weights/sum(weights)
prop <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6)) %>%
ungroup() %>%
.$prop_est
post_est <- sum(prop*weights)
s2 <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6))/(n() - 1)) %>%
ungroup() %>%
.$prop_est
var_post <- (1 - (n/N)) * sum(weights^2 * s2)
c(post_est - 1.96*sqrt(var_post),
post_est + 1.96*sqrt(var_post))
var_post
var_post <- (1 - (n/N)) * sum(weights^2 * s2^2)
var_post
var_post <- (1 - (n/N)) * sum(weights^2 * sqrt(s2))
var_post
c(post_est - 1.96*sqrt(var_post),
post_est + 1.96*sqrt(var_post))
s2 <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6)),
n = n()) %>%
ungroup()
s2
View(q1)
View(df)
s2
s2 <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6)),
n = n(),
squared = (n/101)^2 * prop_est) %>%
ungroup() %>%
.$squared
s2 <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6))/ (n() - 1),
n = n(),
squared = (n/101)^2 * prop_est) %>%
ungroup() %>%
.$squared
s2
var_post <- (1 - (n/N)) * sum(weights^2 * s2)
var_post
post_est
prop
df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6))/ (n() - 1),
n = n(),
squared = (n/101)^2 * prop_est) %>%
ungroup()
s2 <- df %>%
filter(q1 != "I prefer not to say") %>%
group_by(q1) %>%
summarise(prop_est = mean(q6) * (1 - mean(q6))/ (n() - 1),
n = n(),
squared = (n/101)^2 * prop_est) %>%
ungroup() %>%
.$squared
var_post <- (1 - (n/N)) * sum(weights^2 * s2)
c(post_est - 1.96*sqrt(var_post),
post_est + 1.96*sqrt(var_post))
var_post
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
x <- runif(10)
y <- runif(10)
cor(x, y)
df <- tibble(x = x, y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y))
library(tidyverse)
shinyServer(function(input, output) {
output$distPlot <- renderPlot({
x <- runif(10)
y <- runif(10)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y))
})
})
x <- runif(10)
y <- runif(10)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y))
x <- runif(100)
y <- runif(100)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
theme_bw() +
coord_cartesian(x = c(-1, 2)) +
labs(x = "X", y = "Y")
x <- runif(100)
y <- runif(100)
point_cor <- cor(x, y)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
theme_bw() +
labs(x = "X", y = "Y") +
})
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(label = point_cor)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor) +
theme_bw() +
labs(x = "X", y = "Y")
point_cor <- cor(x, y) %>% round(3)
point_cor
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor) +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor, color = "red") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor, color = "blue") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor, color = "green") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1, label = point_cor, color = "red") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "grey50") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmonpink3") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmonpink") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
x <- runif(100)
y <- runif(100)
point_cor <- cor(x, y) %>% round(3)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
x <- runif(100)
y <- runif(100)
point_cor <- cor(x, y) %>% round(3)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
output$distPlot <- renderPlot({
x <- runif(100)
y <- runif(100)
point_cor <- cor(x, y) %>% round(3)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
})
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = 0.1, y = 0.1,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.5, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.2, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.1, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.1, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
target_cor <- -.4
target_cor = 0.3
while(round(point_cor, 2) != target_cor) {
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
}
point_cor
target_cor = 0.9
while(round(point_cor, 2) != target_cor) {
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
}
target_cor
target_cor = 0.1
while(round(point_cor, 2) != target_cor) {
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
}
point_cor
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.1, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
target_cor = 0.5
while(round(point_cor, 2) != target_cor) {
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
}
target_cor = 0.3
while(round(point_cor, 2) != target_cor) {
x <- rnorm(100)
y <- rnorm(100)
point_cor <- cor(x, y) %>% round(3)
}
df <- tibble(x = x,
y = y)
df %>%
ggplot() +
geom_point(mapping = aes(x = x, y = y)) +
geom_text(x = -2.1, y = -2.5,
label = point_cor,
color = "salmon3") +
theme_bw() +
labs(x = "X", y = "Y")
shiny::runApp('Desktop/correlation')
runApp('Desktop/correlation')
shiny::runApp('Desktop/clt_demo')
df <- rt(100)
df <- rt(100, df = deg)
df
df <- rt(100, df = deg)
deg = 10
df <- rt(100, df = deg)
df
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val))
library(tidyverse)
deg <- input$freedom
df <- tibble(val = rt(100, df = deg))
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val))
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val)) +
theme_bw() +
labs(x = "X", y = "Frequency")
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val), binwidth = 1) +
theme_bw() +
labs(x = "X", y = "Frequency")
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val), binwidth = 0.5) +
theme_bw() +
labs(x = "X", y = "Frequency")
df %>%
ggplot() +
geom_histogram(mapping = aes(x = val), binwidth = 0.3) +
theme_bw() +
labs(x = "X", y = "Frequency")
df %>%
ggplot() +
geom_density(mapping = aes(x = val), binwidth = 0.3) +
theme_bw() +
labs(x = "X", y = "Frequency")
df %>%
ggplot() +
geom_density(mapping = aes(x = val), binwidth = 0.1) +
theme_bw() +
labs(x = "X", y = "Frequency")
deg
df %>%
ggplot() +
geom_density(mapping = aes(x = val)) +
theme_bw() +
labs(x = "X", y = "Frequency")
deg
deg = 1000
deg <- input$freedom
set.seed(17)
df <- tibble(val = rt(100, df = deg))
df %>%
ggplot() +
geom_density(mapping = aes(x = val)) +
theme_bw() +
labs(x = "X", y = "Frequency")
shiny::runApp('Desktop/t_distribution')
runApp('Desktop/t_distribution')
runApp('Desktop/t_distribution')
